import math, random

const base = 3
const side = base * base

function pattern(r, c)
{
    return (base * (r % base) + math.floor(r / base) + c) % side
}

function shuffle(arr)
{
    return random.shuffle(arr.copy())
}

const rbase = [...0..base]
const rows = rbase.map((g) => shuffle(rbase).map((r) => g * base + r)).flat()
const cols = rbase.map((g) => shuffle(rbase).map((c) => g * base + c)).flat()
var nums = shuffle([...0..base*base]).map((n) => n + 1)

const board = rows.map((r) => cols.map((c) => nums[pattern(r, c)]))

const line0 = '╔═══╤═══╤═══╦═══╤═══╤═══╦═══╤═══╤═══╗'
const line1 = '║ . │ . │ . ║ . │ . │ . ║ . │ . │ . ║'
const line2 = '╟───┼───┼───╫───┼───┼───╫───┼───┼───╢'
const line3 = '╠═══╪═══╪═══╬═══╪═══╪═══╬═══╪═══╪═══╣'
const line4 = '╚═══╧═══╧═══╩═══╧═══╧═══╩═══╧═══╧═══╝'

const symbol = ' 1234567890'
nums = board.map((row) => {
    return [''] + row.map((n) => symbol[n])
})

print(line0)
for const r in 1..side+1
{
    var i = -1
    var rowstr = nums[r - 1].map((n) => { i++; return n + line1.split('.')[i] }).join('')
    print(rowstr)
    var b1 = (r % side == 0) ? 1 : 0
    var b2 = (r % base == 0) ? 1 : 0
    print([line2, line3, line4][b1 + b2])
}